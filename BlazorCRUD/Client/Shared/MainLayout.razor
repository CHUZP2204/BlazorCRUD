@inherits LayoutComponentBase
@using BlazorCRUD.Client.Shared;
@using BlazorCRUD.Client.Extensiones;

@using Microsoft.Extensions.Configuration


@using Microsoft.AspNetCore.Components.Authorization;
@inject NavigationManager navManager
@inject AuthenticationStateProvider autenticacionProvider

@inject IConfiguration Configuration
@inject IJSRuntime JSRuntime



<div class="pagina">
    <!-- Siguiente CheckBox Controla Estado De Barra Laterl-->
    <!--Checked = No Aparece Barra Laterl-->
    <!--Sin Checked = Aparece Barra Laterl-->
    <!--Esto Esta Controlado Por CSS-->
    <input type="checkbox" id="mostrar-Barra" @bind="@IsChecked" />

    <!---->
    <div class="barraH">
        <BarraLateral />
    </div>

    <div class="EspacioBlanco">
        <NavMenu />
    </div>
    <div>
    </div>

    <main class="contenido">

        <h1>Este es el contenido</h1>
        <h2>Boton Blazor Activar/Desactivar Barra Lateral</h2>
        <button @onclick="ToggleCheckbox">Activar/Desactivar</button>

        <div class="pagina-rotativa">
            @Body
        </div>

        <div class="lista">
            <div>
                
                
            </div>
            <div>
                Cuadro2
            </div>
            <div>
                Cuadro3
            </div>
        </div>
        <div class="lista">
            <div>
                Cuadro1
            </div>
            <div>
                Cuadro2
            </div>
            <div>
                Cuadro3
            </div>
        </div>
        <div class="lista">
            <div>
                Cuadro1
            </div>
            <div>
                Cuadro2
            </div>
            <div>
                Cuadro3
            </div>
        </div>


    </main>
</div>

@code {
    private bool IsChecked = false;

    protected override async Task OnInitializedAsync()
    {
        if (bool.TryParse(await JSRuntime.InvokeAsync<string>("localStorage.getItem", "isChecked"), out bool isChecked))
        {
            IsChecked = isChecked;
        }
    }
    private async Task ToggleCheckbox()
    {
        IsChecked = !IsChecked;
        await JSRuntime.InvokeVoidAsync("localStorage.setItem", "isChecked", IsChecked.ToString());
    }

}